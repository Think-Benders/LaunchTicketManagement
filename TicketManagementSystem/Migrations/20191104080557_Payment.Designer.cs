// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketManagementSystem.Models;

namespace TicketManagementSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20191104080557_Payment")]
    partial class Payment
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TicketManagementSystem.Models.Cart", b =>
                {
                    b.Property<int>("c_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Date")
                        .IsRequired();

                    b.Property<int?>("Promopr_Id");

                    b.Property<int?>("Useru_Id");

                    b.Property<string>("totalTk")
                        .IsRequired();

                    b.HasKey("c_Id");

                    b.HasIndex("Promopr_Id");

                    b.HasIndex("Useru_Id");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.CavinDetails", b =>
                {
                    b.Property<int>("cv_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Launchl_Id");

                    b.Property<string>("Position")
                        .IsRequired();

                    b.Property<double>("Rent");

                    b.Property<string>("cavinCatagory")
                        .IsRequired();

                    b.Property<string>("cavinNumber")
                        .IsRequired();

                    b.HasKey("cv_Id");

                    b.HasIndex("Launchl_Id");

                    b.ToTable("CavinDetails");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.CharterTime", b =>
                {
                    b.Property<int>("ct_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Cartc_Id");

                    b.Property<string>("Catarory")
                        .IsRequired();

                    b.Property<int?>("CavinDetailscv_Id");

                    b.Property<string>("Price")
                        .IsRequired();

                    b.HasKey("ct_Id");

                    b.HasIndex("Cartc_Id");

                    b.HasIndex("CavinDetailscv_Id");

                    b.ToTable("CharterTime");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.FeedBack", b =>
                {
                    b.Property<int>("fb_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Cartc_Id");

                    b.Property<string>("Details")
                        .IsRequired();

                    b.Property<string>("Filter")
                        .IsRequired();

                    b.Property<int?>("Useru_Id");

                    b.HasKey("fb_Id");

                    b.HasIndex("Cartc_Id");

                    b.HasIndex("Useru_Id");

                    b.ToTable("FeedBack");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.Launch", b =>
                {
                    b.Property<int>("l_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Rout")
                        .IsRequired();

                    b.HasKey("l_Id");

                    b.ToTable("Launch");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.Promo", b =>
                {
                    b.Property<int>("pr_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discount")
                        .IsRequired();

                    b.Property<DateTime>("endDate");

                    b.Property<double>("maxAmount");

                    b.Property<string>("promoCode")
                        .IsRequired();

                    b.Property<DateTime>("startDate");

                    b.HasKey("pr_Id");

                    b.ToTable("Promo");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.User", b =>
                {
                    b.Property<int>("u_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(16);

                    b.Property<string>("Gender")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("Password")
                        .HasMaxLength(16);

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.HasKey("u_Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.Cart", b =>
                {
                    b.HasOne("TicketManagementSystem.Models.Promo", "Promo")
                        .WithMany()
                        .HasForeignKey("Promopr_Id");

                    b.HasOne("TicketManagementSystem.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("Useru_Id");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.CavinDetails", b =>
                {
                    b.HasOne("TicketManagementSystem.Models.Launch", "Launch")
                        .WithMany()
                        .HasForeignKey("Launchl_Id");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.CharterTime", b =>
                {
                    b.HasOne("TicketManagementSystem.Models.Cart", "Cart")
                        .WithMany()
                        .HasForeignKey("Cartc_Id");

                    b.HasOne("TicketManagementSystem.Models.CavinDetails", "CavinDetails")
                        .WithMany()
                        .HasForeignKey("CavinDetailscv_Id");
                });

            modelBuilder.Entity("TicketManagementSystem.Models.FeedBack", b =>
                {
                    b.HasOne("TicketManagementSystem.Models.Cart", "Cart")
                        .WithMany()
                        .HasForeignKey("Cartc_Id");

                    b.HasOne("TicketManagementSystem.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("Useru_Id");
                });
#pragma warning restore 612, 618
        }
    }
}
